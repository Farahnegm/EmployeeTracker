@model CodeZone.BLL.DTOs.PaginationDto<CodeZone.BLL.DTOs.EmployeeDto>

@{
    ViewData["Title"] = "Employees";
}

<h1>Employees</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div id="employeeTableWrapper">
<table class="table table-striped">
    <thead>
        <tr>
            <th>Employee Code</th>
            <th>Full Name</th>
            <th>Email</th>
            <th>Department</th>
            <th>Attendance Stats</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.EmployeeCode</td>
                <td>@item.FullName</td>
                <td>@item.Email</td>
                <td>@item.DepartmentName</td>
                <td>
                    <small class="text-muted">
                        Present: @item.Presents | Absent: @item.Absents<br>
                        Percentage: @item.AttendancePercentage.ToString("F1")%
                    </small>
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                    @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-danger btn-sm delete-employee" data-id="@item.Id">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Employee pagination">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = Model.StartPage; i <= Model.EndPage; i++)
            {
                if (i == Model.CurrentPage)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
    
    <div class="text-center text-muted">
        <small>Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems) of @Model.TotalItems items</small>
    </div>
} 

@section Scripts {
<script>
function showNotification(message, type) {
    $('#ajaxNotification').remove();
    var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    var notification = $(`<div id="ajaxNotification" class="alert ${alertClass} alert-dismissible fade show" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999;">
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>`);
    $('body').append(notification);
    setTimeout(function() { notification.alert('close'); }, 3000);
}

$(document).ready(function() {
    $('#employeeTableWrapper .delete-employee').click(function() {
        var $row = $(this).closest('tr');
        var id = $(this).data('id');
        if (confirm('Are you sure you want to delete this employee?')) {
            $.ajax({
                url: '/Employee/Delete/' + id,
                type: 'POST',
                headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                success: function() {
                    $row.fadeOut(400, function() { $(this).remove(); });
                    showNotification('Employee deleted successfully!', 'success');
                    setTimeout(function() { location.reload(); }, 1000);
                },
                error: function() {
                    showNotification('Error deleting employee.', 'danger');
                }
            });
        }
    });
});
</script>
} 
@model CodeZone.DAL.Entities.Department

@{
    ViewData["Title"] = "Edit Department";
}

<h1>Edit Department</h1>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="DepartmentId" />
            
            <div class="form-group mb-3">
                <label asp-for="Name" class="control-label">Department Name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
                <small class="form-text text-muted">Minimum 3 characters, maximum 50 characters</small>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Code" class="control-label">Department Code</label>
                <input asp-for="Code" class="form-control" />
                <span asp-validation-for="Code" class="text-danger"></span>
                <small class="form-text text-muted">Must be exactly 4 uppercase letters (e.g., IT01, HR02)</small>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="Location" class="control-label">Location</label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
                <small class="form-text text-muted">Maximum 100 characters</small>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 